name: Build Audio Plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            cmake_generator: "Visual Studio 17 2022"
            cmake_arch: x64
          - os: macos-latest
            cmake_generator: "Xcode"

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 1

    - name: Install CMake
      uses: lukka/get-cmake@latest

    - name: Cache JUCE
      id: cache-juce
      uses: actions/cache@v4
      with:
        path: JUCE
        key: ${{ runner.os }}-juce-7.0.7

    - name: Setup JUCE
      if: steps.cache-juce.outputs.cache-hit != 'true'
      run: |
        git clone --depth 1 --branch 7.0.7 https://github.com/juce-framework/JUCE.git

    - name: Configure
      shell: bash
      run: |
        cmake -B build \
          -G "${{ matrix.cmake_generator }}" \
          -A "${{ matrix.cmake_arch }}" \
          -DCMAKE_BUILD_TYPE=Release \
          -DJUCE_BUILD_EXTRAS=OFF \
          -DJUCE_BUILD_EXAMPLES=OFF

    - name: Build
      shell: bash
      run: |
        cmake --build build --config Release --parallel

    - name: Create Installer (Windows)
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        iscc "plugin/installer/windows/installer.iss"

    - name: Create Package (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cd build/Replikator_artefacts/Release
        pkgbuild --component "AU/Replikator.component" \
                 --component "VST3/Replikator.vst3" \
                 --install-location "/Library/Audio/Plug-Ins" \
                 --version "1.0.0" \
                 --identifier "com.audiotools.replikator" \
                 --min-os-version "10.6" \
                 "Replikator.pkg"

    - name: Package Artifacts
      shell: bash
      run: |
        mkdir -p artifacts
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp -r "build/Replikator_artefacts/Release/VST3/Replikator.vst3" artifacts/
          cp "plugin/installer/windows/Output/ReplikatorSetup.exe" artifacts/
        else
          cp -r "build/Replikator_artefacts/Release/VST3/Replikator.vst3" artifacts/
          cp -r "build/Replikator_artefacts/Release/AU/Replikator.component" artifacts/
          cp "build/Replikator_artefacts/Release/Replikator.pkg" artifacts/
        fi

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: replikator-${{ matrix.os }}
        path: artifacts/
        retention-days: 90